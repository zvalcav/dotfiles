" Vundle plugin manager
set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

" better markdown support
"Plugin 'plasticboy/vim-markdown' 

" session management
"Plugin 'tpope/vim-obsession'
"Plugin 'dhruvasagar/vim-prosession'
"Plugin 'gikmx/ctrlp-obsession'

" Vim plug for switching between companion source files (e.g. .h and .cpp)
"Plugin 'derekwyatt/vim-fswitch'

" c++ completion
" to compile c-family support for YCM do:
" https://github.com/Valloric/YouCompleteMe/blob/master/README.md#ubuntu-linux-x64
Plugin 'Valloric/YouCompleteMe'

" c-support plugin
"https://github.com/WolfgangMehner/c-support
Plugin 'WolfgangMehner/c-support'

" The following are examples of different formats supported.
" Keep Plugin commands between vundle#begin/end.
" plugin on GitHub repo
"Plugin 'tpope/vim-fugitive'

" plugin from http://vim-scripts.org/vim/scripts.html
" Plugin 'L9'
" Git plugin not hosted on GitHub
"Plugin 'git://git.wincent.com/command-t.git'

" git repos on your local machine (i.e. when working on your own plugin)
"Plugin 'file:///home/gmarik/path/to/plugin'

" The sparkup vim script is in a subdirectory of this repo called vim.
" Pass the path to set the runtimepath properly.
"Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}

" Install L9 and avoid a Naming conflict if you've already installed a
" different version somewhere else.
" Plugin 'ascenator/L9', {'name': 'newL9'}

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required

" To ignore plugin indent changes, instead use:
filetype plugin on

" YouCompleteMe ycm_extra_conf.py
"https://github.com/rasendubi/dotfiles/blob/d534c5fb6bf39f0d9c8668b564ab68b6e3a3eb78/.vim/.ycm_extra_conf.py
let g:ycm_global_ycm_extra_conf = '~/.vim/.ycm_extra_conf.py'

" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line

" basics
set nocompatible		" use Vim defaults
set encoding=utf-8		" use UTF-8 encoding
set fileencoding=utf-8  " use UTF-8 encoding to write files
set mouse=a				" make sure mouse is used in all cases.
set background=dark		" improve default color scheme
set complete+=k			" enable dictionary completion
set completeopt=menuone	" enable completion menu for one item
set clipboard+=unnamed	" yank and copy to X clipboard
set backspace=2			" full backspacing capabilities
set history=256			" 256 lines of command line history
set ruler				" ruler display in status line
set showmode			" show mode at bottom of screen
set showcmd				" show mode at bottom of screen
set showmatch			" show matching brackets (),{},[]
set pastetoggle=<F2>	" disable auto intending when pasting text
set number				" display row numbers
set laststatus=2		" permanently display status line
set timeoutlen=250		" Time to wait after ESC (default causes an annoying delay)

" wrap like other editors
" set wrap				" word wrap
" set textwidth=0
" set lbr				" line break
" set display=lastline	" don't display @ with long paragraphs

" backup settings
" set backup			" keep a backup file
" set backupdir=/var/backup/vim

" searching
set hlsearch			" highlight all search results
set incsearch			" increment search
set ignorecase			" case-insensitive search
set smartcase			" upper-case sensitive search

" syntax highlighting
syntax on				" enable syntax highlighting
set magic				" enable extended regular expressions

" plug-in settings
filetype plugin on
filetype indent on

" disable replace mode on insert double press
imap <Insert> <Nop>
inoremap <S-Insert> <Insert>

" tab customizations
set shiftround			" round indent to multiple of 'shiftwidth'
set autoindent			" align the new line indent with the previous line
set shiftwidth=4		" operation >> indents 4 columns; << unindents 4 columns
set tabstop=4			" a hard TAB displays as 4 columns
set softtabstop=4		" insert/delete 4 spaces when hitting a TAB/BACKSPACE
set smarttab			" deletes whole inserted tab
" set expandtab			" insert spaces when hitting TABs

" fold cutomizations
set foldmethod=indent
set foldlevel=99

" custom windows switching
map <c-j> <c-w>j		" press ctrl + j to switch to down windows
map <c-k> <c-w>k		" press ctrl + k to switch to top windows
map <c-l> <c-w>l		" press ctrl + l to switch to right windows
map <c-h> <c-w>h		" press ctrl + h to switch to left windows

" highlight long lines
" marks black all characters exceeding limit of 110 on each line

"augroup vimrc_autocmds
"	autocmd BufEnter * highlight OverLength ctermbg=darkgrey guibg=#599959
"	autocmd BufEnter * match OverLength /\%110v.*/
"augroup END

