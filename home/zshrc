#SET UP THE PROMPT
bindkey -e
autoload -Uz promptinit
promptinit

#different color on systemd distributions
if which systemctl &> /dev/null
then
	#different color for root
	if [[ $UID -eq 0 ]] ; then
		PS1=${PREFIX}$'%{\e[01;31m%}%n @ %{\e[01;33m%}%M <systemctl> %{\e[01;37m%}(%*): %{\e[01;31m%}%0/
%{\e[01;31m%}%1~ %# %{\e[0m%}'
	else
		PS1=${PREFIX}$'%{\e[01;33m%}%n @ %{\e[01;33m%}%M <systemctl> %{\e[01;37m%}(%*): %{\e[01;33m%}%0/
%{\e[01;33m%}%1~ %# %{\e[0m%}'
	fi
else
	#different color for root
	if [[ $UID -eq 0 ]] ; then
		PS1=${PREFIX}$'%{\e[01;31m%}%n @ %{\e[01;32m%}%M <service> %{\e[01;37m%}(%*): %{\e[01;31m%}%0/
%{\e[01;31m%}%1~ %# %{\e[0m%}'
	else
		PS1=${PREFIX}$'%{\e[01;33m%}%n @ %{\e[01;32m%}%M <service> %{\e[01;37m%}(%*): %{\e[01;33m%}%0/
%{\e[01;33m%}%1~ %# %{\e[0m%}'
	fi
fi

#OPTIONS
#zabranuje tvoreni duplicit
setopt histignoredups 
#prubezne pripisuje zaznamy do historie
setopt incappendhistory 
#
setopt extendedglob 
#umoznuje predavat * prikazum, nehlasi error
setopt nonomatch
#vypise hodnotu exit, kdyz neni 0
setopt printexitvalue
#lepsi doplnovani {} pri tabu
setopt rcexpandparam
#kontroluje maily
setopt mailwarning
#automaticke pushovani slozek do seznamu
setopt autopushd pushdignoredups pushdtohome pushdsilent
#nebude killovat bg procesy
setopt nohup

#COMPLETION SYSTEM
autoload -Uz compinit
compinit

zstyle ':completion:*' use-cache on
zstyle ':completion:*' cache-path ~/.zsh/cache
zstyle ':completion:*' auto-description 'specify: %d'
zstyle ':completion:*' completer _expand _complete _correct _approximate
zstyle ':completion:*' format 'Completing %d'
zstyle ':completion:*' group-name ''
zstyle ':completion:*' menu select=2
eval "$(dircolors -b)"
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*' list-colors ''
zstyle ':completion:*' list-prompt %SAt %p: Hit TAB for more, or the character to insert%s
zstyle ':completion:*' matcher-list '' 'm:{a-z}={A-Z}' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=* l:|=*'
zstyle ':completion:*' select-prompt %SScrolling active: current selection at %p%s
zstyle ':completion:*' use-compctl false
zstyle ':completion:*' verbose true
zstyle ":completion:*" users vaclavz root velp

zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'
zstyle ':completion:*:kill:*' command 'ps -u $USER -o pid,%cpu,tty,cputime,cmd'

#KEY BINDINGS
#backspace
bindkey "^?" backward-delete-char
#insert
bindkey "^[[2~" overwrite-mode
#home
bindkey "^[OH" beginning-of-line
bindkey "^[[H" beginning-of-line
bindkey "^[[1" beginning-of-line
bindkey "^[[1~" beginning-of-line
#page up
bindkey "^[[5~" up-line-or-search
#delete
bindkey "^[[3~" delete-char
#end
bindkey "^[OF" end-of-line
bindkey "^[[F" end-of-line
bindkey "^[[4" end-of-line
bindkey "^[[4~" end-of-line
#page down
bindkey "^[[6~" down-line-or-search

#VARIABLES
export TZ="Europe/Prague"
export PAGER='less'
export EDITOR='vim'
HISTSIZE=1000
SAVEHIST=1000
HISTFILE=~/.histfile_zsh
#vynuceni anglictiny
LANG=en_US.UTF-8
LC_CTYPE="en_US.UTF-8"
LC_NUMERIC=en_US.UTF-8
LC_TIME=en_US.UTF-8
LC_COLLATE="en_US.UTF-8"
LC_MONETARY=en_US.UTF-8
LC_MESSAGES="en_US.UTF-8"
LC_PAPER=en_US.UTF-8
LC_NAME=en_US.UTF-8
LC_ADDRESS=en_US.UTF-8
LC_TELEPHONE=en_US.UTF-8
LC_MEASUREMENT=en_US.UTF-8
LC_IDENTIFICATION=en_US.UTF-8

#FUNCTIONS
#pokud je novejsi soubor v syncu [ -nt ], pak ho zkopiruje do ~/.ssh
[ ! -d ~/.ssh ] && mkdir -p ~/.ssh
[ ! -f ~/.ssh/config ] && cp --update /usr/local/scripty/home/ssh/config ~/.ssh/config
[ /usr/local/scripty/home/ssh/config -nt ~/.ssh/config ] && cp --update /usr/local/scripty/home/ssh/config ~/.ssh/config
[ $(stat --format '%a' ~/.ssh/config) != 600 ] && chmod 600 ~/.ssh/config

archive()
{
	#adds all backed up files to .backup/backup.zip and deletes them
	if [ -d "$PWD/.backup" ]
	then
		find .backup -type f -mtime +1 \! -name "backup.zip" -name "*--*" -exec zip -T --move .backup/backup.zip {} \;
		backup
	else
		printf "%s\n" "backup folder not present, do you want to backup now? (y/n)"
		read reply
		if [ "$reply" = "y" ] || [ "$reply" = "yes" ]
		then
			backup
		else
			printf "%s\n" "skipping backup, nothing to archive"
		fi
	fi
}

#slouzi pro kompilaci c++ kodu, pokud je predan parametr a ma koncovku cpp
#compile c++ code
#vystupni soubory uklada do slozky bin, aby se nemotaly
ccc()
{
	if [ -n "$1" ] 
	then
		echo "kompilace ($1) - vystup (bin/${1%.cpp})"
		g++ -g -Wall "$1" -o "bin/${1%.cpp}"
	else
		echo "nepodporovany soubor, nebo nebyl zadan parametr"
	fi
}

#slouzi pro spusteni zkompilovaneho c++ kodu, aby nebylo nutne stale psat bin/
#run c++ code
#spousti soubory ukladane do slozky bin, aby se nemotaly
rcc()
{
	if [ -n "$1" ] 
	then
		echo "spoustim (bin/${1%.cpp})"
		bin/${1%.cpp}
	else
		echo "nebyl zadan parametr"
	fi
}

#ALIASES
#zshconfig
alias killssh='killall ssh'
alias reload='source ~/.zshrc'

#system
alias ll='ls -lha --color=auto '
alias grep='grep --color=auto '
alias showssh='ps aux | grep ssh'
alias unlocalhost='mv .ssh/known_hosts .ssh/known_hosts.tmp && cat .ssh/known_hosts.tmp | sed -e "/\[localhost\]:22022/d" >> .ssh/known_hosts'
alias unkey="ssh-keygen -f ~/.ssh/known_hosts -R"
alias rdp1920='rdesktop -g1920x1044 -D -N -k en-us -N -a 16 -x broadband -r clipboard:PRIMARYCLIPBOARD -r disk:share=/mnt/data/Downloads'
alias rdp='rdesktop -gworkarea -D -N -k en-us -N -a 16 -x broadband -r clipboard:PRIMARYCLIPBOARD -r disk:share=/mnt/data/Downloads'
alias vmess='vim /var/log/messages'
alias vmail='vim /var/log/maillog'
alias vscript='vim /var/log/scripty.log'
alias vsys='vim /var/log/syslog'
alias chromerep='rm -rf ~/.config/google-chrome/Default/Web\ Data'
alias cdscr='cd /usr/local/scripty'
alias cdsce='cd /usr/local/etc'
alias cdscp='cd /usr/local/scripty/pracovni'
alias sqlstart='mysql --defaults-extra-file=/usr/local/etc/.my.cnf'
alias group_list='echo -e "zadej nazev skupiny:";read group_name;echo -e "vypis clenu pro $group_name:";for user in $(samba-tool group listmembers "$group_name");do getent passwd "$user" | cut -d':' -f5;done'
alias rsync-full-backup='rsync -aA --delete --exclude="/dev" --exclude="/proc" --exclude="/sys" --exclude="/tmp" --exclude="/run" --exclude="/lost+found" --exclude="/mnt" /'
alias backup-loop='while true;do sleep 60;backup;done >/dev/null &'
alias backup-kill='kill %1'

#Aliases for samba 4
alias reload-smb='smbcontrol all reload-config'
alias restart-smb='service sernet-samba-ad restart'
