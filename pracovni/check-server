#!/bin/bash
#check-server
#script, ktery bude spousteny cronem a bude provadet nastavene kontroly na serveru


#LIST 
#_PROMENNE 
#_LOGOVANI 
#_PODMINKY 
#_KONFIGURACE 
#_ATOP 
#_UPS
#_CRON
#_LOGROTATE
#_ALIASES
#_SYSTEMCTL
#_/USR/LOCAL/BIN
#_promazani
#_REPOZITARE 
#_RSYNC
#_VAR/BACKUP/SCRIPTY

#_PROMENNE
scriptName="check-server"

#seznam scriptu, ktere se budou spoustet z cron.daily, mysql-backup se bude spousten crontabem
defaultList="check-server server-backup samba-backup rsync-backup postgresql-backup update-zabbix"


#v pripade, ze je script spousten ze slozky pracovni, nastavi se mu jine cesty, nez pri spusteni pres cron
if [ "$(echo $PWD | grep -c pracovni)" -eq 0 ] && [ "$(echo $0 | grep -c pracovni)" -eq 0 ]
then

	#cesta ke scriptu
	scriptDir="/usr/local/scripty"
	verbose=0
else

	#cesta ke scriptu
	scriptDir="/usr/local/scripty/pracovni"
	verbose=1
fi


#_LOGOVANI

#nacteni definice funkci Log,LogError,RvCheck,MailSend z knihovny
. $scriptDir/funkce 


#_PODMINKY
Log "zacatek scriptu"
echo "$$" > "$startFile"
Log "($startFile) set to ($$)"


#_KONFIGURACE

#zapise konfiguracni soubor, ze ktereho bude nasledne nacitat hodnoty
if [ -f "$configFile" ]
then
	#nacteni obsahu configfile
	. "$configFile"
	Log "nacten konfiguracni soubor ($configFile)"
else
	{
	echo "disabled=0	#slouzi pro globalni, hromadne zruseni spousteni vsech scriptu ze slozky $scriptDir"
	echo "recipient=\"\"	#email, na ktery se budou posilat pripadne problemy"
	} > $configFile
	Log "zapsan konfiguracni soubor pro server ($HOSTNAME)"
	. "$configFile"
fi


#nastavenim disabled na 1 se vypne spousteni scriptu, uprav $configFile, mail se neposila
if [ "$disabled" -eq 1 ]
then
	Log "script byl disablovan v konfiguracnim souboru ($configFile)"
	exit 0
fi


#pro jistotu vzdy nastavi opravneni pro konfiguracni soubory na 600
chmod -R 600 "$configDir"


#_ATOP
#kontrola/instalace atopu
if service atop status &> /dev/null
then
	RvLog "Atop je nainstalovan a bezi"
else
	if [ $(which yum | grep -c "yum") -ne 0 ]
	then
		yum -y install epel-release
		sleep 1
		sed -i -e 's/enabled=1/enabled=0/g' /etc/yum.repos.d/epel.repo
		sleep 1
		yum --enablerepo=epel -y install atop
		sleep 1
		chkconfig atop on
		sleep 1
		service atop start
	fi
fi


#_UPS
#kontrola runtime UPS, pokud existuje sluzba apcupsd
#pokud existuje service apcupsd, pak vycte hodnotu runtime
if service apcupsd status &> /dev/null
then
    #vycte pocet zbyvajicich minut. vypreparuje je z udaje TIMELEFT obsazene ve vypisu service apcupsd status
    if [ $(service apcupsd status | grep TIMELEFT | cut -d':' -f2 | sed -e 's/^[ ]//g' | cut -d'.' -f1) -lt 20 ]
    then
        LogError "Runtime je nizsi nez 20 minut, nutna vymena baterii na $HOSTNAME"
	else
		Log "Runtime baterii je dostatecny, zbyva [$(service apcupsd status | grep TIMELEFT | cut -d':' -f2 | sed -e 's/^[ ]//g' | cut -d'.' -f1)] minut"
    fi
else
	Log "K serveru neni pripojena zadna UPS"
fi


#_CRON
#kontrola a pripadna zmena spousteni scriptu
scriptsARRAY=($(echo "$defaultList"))
Log "nacteno pole scriptsARRAY ($scriptsARRAY)"
for script in ${scriptsARRAY[@]}
do
	if [ ! -e /etc/cron.daily/"$script" ]
	then
		ln -sf /usr/local/scripty/"$script" /etc/cron.daily/"$script"
		RvLog "provedeno nalinkovani scriptu ($script) do /etc/cron.daily"
	else
		Log "script ($script) je v poradku"
	fi
done


#odstraneni zaznamu pro zabbix-backup
if [ -h /etc/cron.daily/zabbix-backup ]
then
	rm /etc/cron.daily/zabbix-backup
	LogError "Odstranen zaznam pro zabbix-backup"
fi


#pokud neni zaznam pro mysql-backup
if [ ! -e /etc/cron.d/mysql-backup ]
then
	#vytvori radek, ktery spousti dany script ve 20:00 a kompletni debug vystup se uklada do souboru ve /var/log
	{ 
		echo "#denni spousteni mysql-backup"
		echo "0 20 * * * root /bin/bash -x /usr/local/scripty/mysql-backup &>/var/log/scripty-mysql-backup.log"
	} > /etc/cron.d/mysql-backup
	RvLog "zapsano spousteni mysql-backup scriptu do cronu roota"
#pokud uz zaznam existuje
else
	#a stale existuje link v /etc/cron.daily, tak ho odstrani
	if [ -e /etc/cron.daily/mysql-backup ]
	then
		rm /etc/cron.daily/mysql-backup
		RvLog "odstranen link z cron.daily pro mysql-backup"
	fi
fi


#pokud neni zaznam pro era-mysql-backup
era_mysql_backup_config="/usr/local/etc/era-mysql-backup.conf"
if [ -d /opt/eset/RemoteAdministrator/Server ]
then
	#pokud jeste neexistuje konfiguracni soubor, tak pusti script, aby se zapsal
	if [ ! -f "$era_mysql_backup_config" ]
	then
		"$scriptDir"/era-mysql-backup
		RvLog "Spusten era-mysql-backup pro zapsani configu"
	fi

	#pokud je script disablovany, ale existuje slozka s ERou
	if [ $(grep -c "disabled=1" "$era_mysql_backup_config") -ne 0 ]
	then
		#zapne spousteni scriptu
		sed -i -e 's/disabled=1/disabled=0/g' "$era_mysql_backup_config"
		RvLog "Povoleno spousteni scriptu era-mysql-backup v konfiguracnim souboru [/usr/local/etc/era-mysql-backup.conf]"
	fi

	#pokud stale existuje link v /etc/cron.daily, tak ho odstrani
	if [ -h /etc/cron.daily/era-mysql-backup ]
	then
		rm /etc/cron.daily/era-mysql-backup &> /dev/null
		RvLog "odstranen link z cron.daily pro era-mysql-backup"
	fi

	#pokud neexistuje zaznam pro pravidelne spousteni scriptu, tak ho vytvori
	if [ ! -e /etc/cron.d/era-mysql-backup ]
	then
		#vytvori radek, ktery spousti dany script ve 21:00 a kompletni debug vystup se uklada do souboru ve /var/log
		{ 
			echo "#denni spousteni era-mysql-backup"
			echo "0 21 * * * root /bin/bash -x /usr/local/scripty/era-mysql-backup &>/var/log/scripty-era-mysql-backup.log"
		} > /etc/cron.d/era-mysql-backup
	
		RvLog "zapsano spousteni era-mysql-backup scriptu do cronu roota"
	fi
fi


#_LOGROTATE
#provede rotaci log souboru
#/usr/sbin/logrotate /etc/logrotate.d/scripty
#RvLog "logrotate /etc/logrotate.d/scripty"

#_ALIASES
#kontroluje, zda je nastaven mail pro prijimani roota
if [ $(grep -c -e "^#root:" /etc/aliases) -ne 0 ]
then
	sed -i -e 's/#root:.*$/root:		poruchy@comarr.cz/' /etc/aliases
	LogError "nastaven mail pro roota na poruchy@comarr.cz"
	newaliases
	RvLog "provedeno newaliases"
fi


#_SYSTEMCTL
#zkontroluje nalinkovani pomocnych scriptu do /usr/local/bin, pokud nejsou, provede jejich nalinkovani
#pro centos 7 jsou pomocne scripty postavene na systemctl, pro starsi jsou postavene na service a chkconfigu
if which systemctl &> /dev/null
then
	for command in $(ls /usr/local/scripty/pracovni/linux/centos7)
	do
		if [ ! -h /usr/local/bin/"$command" ]
		then
			ln -sf /usr/local/scripty/pracovni/linux/centos7/"$command" /usr/local/bin/"$command"
			LogError "Vytvoren link pro [$command]"
		else
			Log "Symlink pro [$command] existuje"
		fi
	done
else
	for command in $(ls /usr/local/scripty/pracovni/linux/centos6)
	do
		if [ ! -h /usr/local/bin/"$command" ]
		then
			ln -sf /usr/local/scripty/pracovni/linux/centos6/"$command" /usr/local/bin/"$command"
			LogError "Vytvoren link pro [$command]"
		else
			Log "Symlink pro [$command] existuje"
		fi
	done
fi


#_/USR/LOCAL/BIN
for scriptPath in $(find /usr/local/scripty -maxdepth 1 -mindepth 1 -type f | grep -v "zapache\|ldap-transfer\|add-samba-users\|funkce\|puvodni")
do
	script=$(basename "$scriptPath")
	if [ ! -h /usr/local/bin/"$script" ]
	then
		ln -sf "$scriptPath" /usr/local/bin/"$script"
		LogError "vytvoren symlink pro [$script]"
	else
		Log "symlink pro [$script] je v poradku"
	fi
done
Log "Dokoncena kontrola scriptu v /usr/local/bin"

#_promazani
#/var/log od chybne rotovanych scriptu
#find /var/log -type f -name "scripty*" -exec rm -r {} \;


#_REPOZITARE
#kontrola disablovanych repozitaru
if [ $(yum repolist | grep -c -i "remi\|zabbix\|epel\|forge\|sernet\|veeam") -ne 0 ]
then
    sed -i -e 's/enabled[ ]*=[ ]*1/enabled=0/g' /etc/yum.repos.d/epel*.repo
    sed -i -e 's/enabled[ ]*=[ ]*1/enabled=0/g' /etc/yum.repos.d/remi*.repo
    sed -i -e 's/enabled[ ]*=[ ]*1/enabled=0/g' /etc/yum.repos.d/rpmforge.repo
    sed -i -e 's/enabled[ ]*=[ ]*1/enabled=0/g' /etc/yum.repos.d/zabbix.repo
    sed -i -e 's/enabled[ ]*=[ ]*1/enabled=0/g' /etc/yum.repos.d/sernet-samba-*.repo
    sed -i -e 's/enabled[ ]*=[ ]*1/enabled=0/g' /etc/yum.repos.d/veeam.repo
    LogError "disablovany repozitare yumu"
fi


#_RSYNC
#pokud existuje error soubor pro script-downloader, pusti rsync taky, aby se opravila pripadna chyba
if [ -f /var/spool/scripty/script-downloader.err ]
then
	Log "Error na script-downloaderu, vynucene stazeni scriptu"
	rsync -av --delete --exclude=".backup" --delete-excluded monitoring.comarr.cz::scripty /usr/local/scripty
	RvLog "Dokonceno stazeni scriptu"
fi

#_VAR/BACKUP/SCRIPTY
#smazani zalozni slozky /var/backup/scripty
if [ -d /var/backup/scripty ]
then
	rm -r /var/backup/scripty
	RvLog "smazana slozka /var/backup/scripty"
fi

#pokud je errorFile, posle mailem $logFile, jinak udela touch na stopFile
MailSend
exit 0
