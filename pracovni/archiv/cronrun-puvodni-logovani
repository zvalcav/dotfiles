#!/bin/bash
#cronrun
#script, ktery bude spousteny cronem a bude spoustet jednotlive scripty


#LIST _PROMENNE _EXITY _LOGOVANI _PODMINKY _KONFIGURACE _FUNKCE _ZALOHA


#_PROMENNE
scriptName="cronrun"
defaultList="server-backup rsync-backup backup-zabbix mysql-backup samba-backup"	#seznam scriptu, ktere se budou spoustet


if [ "$(echo $PWD | grep -c pracovni)" -eq 0 ] && [ "$(echo $0 | grep -c pracovni)" -eq 0 ]	#v pripade, ze je script spousten ze slozky pracovni, nastavi se mu jine cesty, nez pri spusteni pres cron
then
	scriptDir="/usr/local/scripty" #cesta ke scriptu
        verbose=0
	deBug=0
else
	scriptDir="/usr/local/scripty/pracovni" #cesta ke scriptu
	verbose=1
	deBug=1
fi


#_LOGOVANI
. $scriptDir/funkce 	#nacteni definice funkci Log,LogError,RvCheck,MailSend z knihovny


#_PODMINKY
Log "zacatek scriptu"
touch "$pidDir/cronrun.start"
RvLog "touch start file"
[ "$(grep -c 'verbose' $configFile)" -eq 0 ] || rm "$configFile"        #doplneni radku do configFile
RvLog "kontrola aktualnosti configFile, pripadne odstraneni stareho"


#_KONFIGURACE
if [ -f "$configFile" ]	#zapise konfiguracni soubor, ze ktereho bude nasledne nacitat hodnoty
then
	#pokud v configu neni promenna debugging, tak ji prida
	if [ $(grep -c "debugging" "$configFile") -eq 0 ]
	then
		echo "debugging=0        #vypne/zapne (0/1) debugovani spoustenych scriptu" >> "$configFile"        #doplneni radku do configFile
	fi

	#pokud je v configu promenna disabled s kvotovanou hodnotou, tak ji odkvotuje
	if [ $(grep -c "disabled=\"" "$configFile") -ne 0 ]
	then
		sed -i 's/disabled=\"\([0-9]\+\)\"/disabled=\1/' "$configFile"
		Log "nahrazeni promenne disabled bez uvozovek"
	fi

	#pokud je v configu promenna debugging s kvotovanou hodnotou, tak ji odkvotuje
	if [ $(grep -c "debugging=\"" "$configFile") -ne 0 ]
	then
		sed -i 's/debugging=\"\([0-9]\+\)\"/debugging=\1/' "$configFile"
		Log "nahrazeni promenne debugging bez uvozovek"
	fi

	#nacteni obsahu configfile
	. "$configFile"
	Log "nacten konfiguracni soubor ($configFile)"
else
	{
	echo "disabled=0	#slouzi pro globalni, hromadne zruseni spousteni vsech scriptu ze slozky $scriptDir"
	echo "cronList=\"\"	#seznam scriptu, ktere se budou spoustet, oddeleny carkou"
	echo "recipient=\"\"	#email, na ktery se budou posilat pripadne problemy"
	echo "debugging=0	#slouzi pro globalni zapnuti debugovani"
	} > $configFile
	Log "zapsan konfiguracni soubor pro server ($HOSTNAME)"
	. "$configFile"
fi


if [ "$disabled" -eq 1 ]	#nastavenim disabled na 1 se vypne spousteni scriptu, uprav $configFile, mail se neposila
then
	Log "script byl disablovan v konfiguracnim souboru ($configFile)"
	exit 0
fi


if [ "$debugging" -eq 1 ]	#zapne podrobne vypisy scriptu
then
	export deBug=1
	export verbose=1
	Log "nastaveny podrobne vypisy scriptu"
fi


find "$pidDir" -maxdepth 1 -type f -name "*.err" -exec rm {} \;	#odstraneni pripadnych err souboru
RvLog "find ($pidDir) -maxdepth 1 -type f -name \"*.err\" -exec rm {} \;"


logrotate /etc/logrotate.d/scripty
RvLog "logrotate /etc/logrotate.d/scripty"
scriptList="$defaultList $cronList"	#spojeni defaultni konfigurace s konfiguraci z $configFile
Log "nastavena promenna scriptList ($scriptList)"
scriptsARRAY=($(echo "$scriptList"))	#vytvoreni pole ze seznamu scriptu
Log "nacteno pole scriptsARRAY ($scriptsARRAY)"


for script in ${scriptsARRAY[@]}	#spusteni jednotlivych scriptu
do
	Log "kontrola configFile pro ($script)"
	if [ ! -f "$configDir/${script}.conf" ]	
	then
		Log "priprava na konfiguraci scriptu ($script)"
		Logger
		if [ "$verbose" -eq 1 ]	#pri verbose behu nepresmerovava strout do pipe, zdvojuje to logy
		then
			"$scriptDir/$script" -c 2>"$pipeFile" 	#spusteni jednotlivych scriptu s presmerovanim stderr do named pipe
			RvLog "zapsana konfigurace scriptu ($script) v modu verbose"
		else
			#"$scriptDir/$script" -c >"$defaultPipe" 2>"$pipeFile" 	#spusteni jednotlivych scriptu s presmerovanim stderr do named pipe
			"$scriptDir/$script" -c > /dev/null 2>"$pipeFile" 	#spusteni jednotlivych scriptu s presmerovanim stderr do named pipe
			RvLog "zapsana konfigurace scriptu ($script) v normalnim modu"
		fi
		KillLogger
		Log "dokoncena konfigurace scriptu ($script)"
	else
		
		if [ $( grep -c "disabled=\"" "$configDir/${script}.conf" ) -eq 1 ]
		then
			sed -i 's/disabled=\"\([0-9]\+\)\"/disabled=\1/' "$configDir/${script}.conf"
		fi

		if [ "$(grep -c 'disabled=1' $configDir/${script}.conf)" -eq 0 ] 	#kontrola disablovaneho scriptu
		then
			Log "priprava na spusteni scriptu ($script)"
			startFile="$pidDir/${script}.start"
			touch "$startFile"	#oznaci zacatek scriptu, konec se provadi ve funkci MailSend za predpokladu, ze probehl script bez erroru
			Log "spoustim script ($script)"
			Logger
			if [ "$verbose" -eq 1 ]	#pri verbose behu nepresmerovava strout do pipe, zdvojuje to logy
			then
				"$scriptDir/$script" 2>"$pipeFile" 	#spusteni jednotlivych scriptu s presmerovanim stderr do named pipe
				RvLog "dokoncen script ($script) v modu verbose"
			else
				#"$scriptDir/$script" >"$defaultPipe" 2>"$pipeFile" 	#spusteni jednotlivych scriptu s presmerovanim stderr do named pipe
				"$scriptDir/$script" > /dev/null 2>"$pipeFile" 	#spusteni jednotlivych scriptu s presmerovanim stderr do named pipe
				RvLog "dokoncen script ($script) v normalnim modu"
			fi
			KillLogger
			Log "dokoncen script ($script)"
		else
			Log "script ($script) je disablovan v ($configDir/${script}.conf)"
		fi
	fi
done


MailSend	#pokud je errorFile, posle mailem $logFile, jinak udela touch na stopFile
exit 0
