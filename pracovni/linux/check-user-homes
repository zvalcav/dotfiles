#!/bin/bash
#script pro drobne upravy v konfiguraci uzivatelskych home adresaru

scriptName="check-user-homes"
homeDirPath="/home/homes"
tmpHomesList="/tmp/homes.list"

#v pripade, ze je script spousten ze slozky pracovni, nastavi se mu jine cesty, nez pri spusteni pres cron
if [ "$(echo $PWD | grep -c pracovni)" -ne 0 ] || [ "$(echo $0 | grep -c pracovni)" -ne 0 ]
then
	#cesta ke scriptu
	scriptDir="/usr/local/scripty/pracovni"
	verbose=1
	deBug=1
else
	#cesta ke scriptu
	scriptDir="/usr/local/scripty"
	verbose=0
fi

#_LOGOVANI

#nacteni definice funkci Log,LogError,RvLog,MailSend z knihovny
. $scriptDir/funkce 
Log "script ($scriptName) - zacatek"
echo "$$" > "$startFile"
Log "($startFile) set to ($$)"

#_FUNKCE

#f_log
#funkce slouzi pro bezne provozni zaznamy
#provede zapis predaneho parametru do logu (/var/log/scripty)
#pri verbose i na screen
f_log()
{
	if [ "$verbose" -eq 1 ]
	then
		echo "$(date '+%b %d %T') $HOSTNAME $scriptName: Log - $1" | tee -a "$logFile"
	else
		echo "$(date '+%b %d %T') $HOSTNAME $scriptName: Log - $1" >> "$logFile"
	fi
}


#f_log_error
#funkce slouzi pro logovani erroru, pripadne ukonceni programu
#provede ERROR zapis predaneho parametru do logu s nazvnem scriptu v (/var/log/scripty)
#f_log_error "text pro zalogovani" "exit"
f_log_error()
{
	if [ "$verbose" -eq 1 ]
	then
		echo "$(date '+%b %d %T') $HOSTNAME $scriptName: Error - $1" | tee -a "$logFile"
		touch "$errorFile"
	else
		echo "$(date '+%b %d %T') $HOSTNAME $scriptName: Error - $1" >> "$logFile"
		touch "$errorFile"
	fi
	#pokud je druhy parametr exit, tak provede ukonceni programu
	if [ "$2" = "exit" ]
	then
		exit 3
	fi
}

#f_rv_log
#provede kontrolu navratove hodnoty, v pripade, ze je 1, provede zalogovani predaneho parametru jako error
f_rv_log()
{
	rv="$?"
	if [ "$rv" -eq 0 ]
	then
		[ "$deBug" -eq 1 ] && f_log "f_rv_log - [$1]"
	else
		f_log_error "f_rv_log - [$1] ($rv)"
	fi
	return "$rv"
}

#f_test_dir
#funkce provede kontrolu existence slozky predane v parametru

f_test_dir()
{
	if [ ! -d "$1" ]
	then
		f_log_error "zadana slozka neexistuje" "exit"
	else
		f_log "slozka [$1] existuje"
	fi
	return 0
}

if cd "$homeDirPath" > /dev/null 2> /dev/null
then
	#zapsani docasneho seznamu souboru do souboru
	find -mindepth 1 -maxdepth 1 -type d -printf '%P\n' > "$tmpHomesList"

	while read line
	do
		userName=$(stat -c%U "$line")
		f_log "zpracovavam $userName"
		#kontroluje, zda 
		if [ -d "$homeDirPath/$line" ] && id "$userName" > /dev/null
		then
			#pokud neni slozka public_html, tak ji vytvori a nastavi ji patricna opravneni
			if [ ! -d "$homeDirPath/$line/public_html" ]
			then
				#prepne se do daneho uzivatele a vytvori slozku pod nim
				su -c "mkdir $line/public_html" -m "$userName"
				#nastavi opravneni na slozku, aby do ni mohl apache
				setfacl --modify other::r-x,default:other::r-x "$homeDirPath/$line/public_html"
				f_log "vytvorena a nastavena slozka public_html pro uzivatele $userName"
			fi

			#kontroluje, zda ma skupina others travers do uzivatelskeho home
			if [ $(getfacl "$line" | grep -c "^other::--x") -eq 0 ]
			then
				setfacl --modify other::--x "$homeDirPath/$line"
				f_rv_log "nastavena opravneni pro others na adresari [$homeDirPath/$line]"
			fi

			#pokud neexistuje .forward
			if [ ! -f "$homeDirPath/$line/.forward" ]
			then
				su -c "touch $homeDirPath/$line/.forward" -m "$userName"
				f_rv_log "vytvoren .forward v adresari [$homeDirPath/$line]"
			fi

			#pokud neni link na .flexlmrc
			if [ ! -h "$homeDirPath/$line/.flexlmrc" ]
			then
				su -c "ln -sf /home/.flexlmrc $homeDirPath/$line" -m "$userName"
				f_rv_log "vytvoren symlink na soubor .flexlmrc v adresari [$homeDirPath/$line]"
			fi
		else
			f_log_error "nastal problem s rozpoznanim slozky [$homeDirPath/$line] nebo uzivatele ($userName)"
		fi

	done < "$tmpHomesList"
else
	echo "spatne zadana cesta k domovskym adresarum"
	exit 1
fi

rm "$tmpHomesList"
MailSend
exit 0
