#!/bin/bash
#mdm-duplicate-entry-remove - slouzi pro odstraneni duplicit v databazi ESET mdm
#script je pripraveny na pousteni z cronu a je zcela bezobsluzny. Jedina zmena, kterou
#je mozne/nutne udelat, je prepsani promenne recipient, coz umozni posilani mailu, 
#kdyz dojde k odstraneni zaznamu, na zvoleny mail


#LIST _PROMENNE _EXITY _LOGOVANI _PODMINKY _KONFIGURACE _ODSTRANENI_DUPLICIT


#_PROMENNE
scriptName="mdm-duplicate-entry-remove"

#nazev databaze mdm, ze ktere se pripadne duplicity odstranuji
database="era_mdm_db"

scripty="/usr/local/scripty"

#slouzi pro zasilani mailu uzivateli, ktery je nastaveny v promenne recipient
recipient="tomasa@comarr.cz"

#nastaveni verbose vystupu = 1
verbose=0
deBug=0

#slozka, kde jsou konfiguracni soubory k jednotlivym scriptum
configDir="/usr/local/etc"

#konfiguracni soubor pro konkretni script
configFile="$configDir/${scriptName}.conf"

#slozka, kde jsou .err soubory a soubor messages pro scripty
logDir="/var/log"

#souboru, kam se loguje vse
logFile="$logDir/scripty.log"

#slozka, kde jsou .pid soubory pro jednotlive bezici procesy + .start .stop soubory
#ktere slouzi pro detekci spusteni a dokonceni scriptu
pidDir="/var/spool/scripty"

#zacatek scriptu, obsahuje pid procesu pri spusteni, slouzi pro kontrolu beziciho procesu
startFile="$pidDir/${scriptName}.start"

#konec scriptu
stopFile="$pidDir/${scriptName}.stop"

#errorFile je prazdny soubor, slouzi pouze pro indikaci pripadnych erroru	
errorFile="$pidDir/${scriptName}.err"

#soubor, ktery oznacuje spusteny script, maze se ve funkci MailSend
runFile="$pidDir/${scriptName}.run"

#soubor obsahujici pid beziciho logovaciho loopu
pidFile="$pidDir/${scriptName}.pid"

#soubor obsahujici pid defaultniho logovaciho loopu
defaultPid="$pidDir/default.pid"

#slozka kde se vytvareji named pipe
pipeDir="$pidDir/pipe"	

#_LOGOVANI
#pokud od minule zustal soubor $errorFile, tak ho odstrani
if [ -e "$errorFile" ]
then
	rm "$errorFile"
fi


#_Log
Log(){
	#provede zapis predaneho parametru do logu (/var/log/scripty), pri verbose to hrne i na screen
	if [ "$verbose" -eq 1 ]
	then
		echo "$(date '+%b %d %T') $HOSTNAME $scriptName: Log - $1" | tee -a "$logFile"
	else
		echo "$(date '+%b %d %T') $HOSTNAME $scriptName: Log - $1" >> "$logFile"
	fi
}


#_LogError
LogError(){
	#provede ERROR zapis predaneho parametru do logu s nazvnem scriptu v (/var/log/scripty)
	if [ "$verbose" -eq 1 ]
	then
		echo "$(date '+%b %d %T') $HOSTNAME $scriptName: Error - $1" | tee -a "$logFile"
		touch "$errorFile"
	else
		echo "$(date '+%b %d %T') $HOSTNAME $scriptName: Error - $1" >> "$logFile"
		touch "$errorFile"
	fi
}


#_RvLog
RvLog(){
	#provede kontrolu navratove hodnoty, v pripade, ze je 0, provede zalogovani predaneho parametru
	rv="$?"
	if [ "$rv" -eq 0 ]
	then
		Log "RvLog - [$1]"
	else
		LogError "RvLog - [$1] navratova hodnota ($rv)"
	fi
	return "$rv"
}


#_CheckDir
#zkontroluje zda existuje slozka predana jako parametr, pokud ne, tak ji vytvori
CheckDir(){
	if [ -d "$1" ]
	then
		RvLog "CheckDir - slozka $1 existuje"
		return 0
	else
		mkdir -p "$1"
		RvLog "CheckDir - vytvoreni slozky $1"
		return "$?"
	fi
}


#otestuje potrebne slozky
CheckDir "$configDir"
CheckDir "$pidDir"
CheckDir "$pipeDir"
CheckDir "$scripty"


#_MailSend
MailSend(){
	#posle errory z prubehu, pokud se nejake zapsaly do $errorFile
	
	#odstranuje vzdy, krome pripadu,  kdy je predan parametr keep
	#ten se predava pouze pri kontrole pomoci funkce TestRunFile()
	#je to ochrana pred pripadnym smazanim runFile u stale beziciho scriptu
	if [ "$1" != "keep" ]
	then

		#odstrani runFile, pri volani MailSend, jelikoz po nem vzdy nasleduje exit
		#s vyjimkou parametru keep
		[ -f "$runFile" ] && rm "$runFile"
		RvLog "odstraneni runFile ($runFile)"
	fi

	if [ -e "$errorFile" ]
	then
		LogError "MailSend - script ($scriptName) - nastaly problemy, posilam mailem vystup"

		#zkontroluje, zda je nastaveny mail, pokud ano, tak posle vystup logu mailem
		if [ -n "$recipient" ]
		then
			cat "$logFile" | grep "$scriptName" | mail -s "SCRIPT ERROR - ($scriptName) - ($HOSTNAME)"\
				"$recipient"
		fi
		return 11
	else
		touch "$stopFile"
		RvLog "script ($scriptName) dokoncen bez erroru"
		return 0
	fi
}


#_TestRunFile
#slouzi pro kontrolu, zda neexistuje runFile, pokud existuje, ukonci script
#pokud neexistuje, tak ho vytvori
TestRunFile()
{
	#kontrola, zda script nebezi od minule
	if [ -f "$runFile" ]
	then
		scriptPid=$(cat "$startFile")

		#zkontroluje pid puvodniho procesu
		if [ $(ps -p "$scriptPid" | grep -c "$scriptName") -eq 0 ]
		then

			#pokud uz na pidu script nebezi, spusti se normalne
			touch "$runFile"
			:
			LogError "($scriptPid) neodpovida ($scriptName), ignoruje se stary run soubor ($runFile)"
		else

			#pokud na pidu stale bezi puvodni proces, skonci a nic nedela
			LogError "script ($scriptName) stale bezi ($scriptPid),\
				nelze spoustet dvakrat ($scriptName) - ($runFile)"
			MailSend "keep"
			exit 6
		fi
	else
		touch "$runFile"
		Log "zaznamenan zacatek scriptu ($scriptName) - ($runFile)"
	fi
}

TestRunFile

Log "script ($scriptName) - zacatek"
echo "$$" > "$startFile"
Log "($startFile) set to ($$)"

#_KONFIGURACE

#konfigurace pro soubor s heslem
mysqlDefaultsFile="$configDir/.mdm-my.cnf"

#funkce pro zapis souboru pro pripojeni k  mysql
write_mysqlDefaultsFile()
{
	mysqlPassword=$(grep "Password=" /etc/opt/eset/RemoteAdministrator/MDMCore/startupconfiguration.ini\
		| cut -d'{' -f 2 | cut -d'}' -f1)
	{
		echo "[mysql]"
		echo "user=era"
		echo "password='$mysqlPassword'"
		echo ""
		echo "[mysqldump]"
		echo "user=era"
		echo "password='$mysqlPassword'"
	} > "$mysqlDefaultsFile"
	chmod 600 "$mysqlDefaultsFile"
}

#zapise konfiguracni soubor, ze ktereho bude nasledne nacitat hodnoty
write(){
	if [ -f "$configFile" ]
	then
		cp "$configFile" "${configFile}.back"
		RvLog "provedena zaloha konfigurace do (${configFile}.back)"
	fi
	{
	echo "disabled=1		#vypne/zapne (1/0) provadeni scriptu"
	echo "recipient=\"tomasa@comarr.cz\"		#zapsat email pro posilani erroru"
	} > "$configFile"
	LogError "zapsan konfiguracni soubor pro server ($HOSTNAME)"
	write_mysqlDefaultsFile
}


#pokud neni konfiguracni soubor, nebo byl predan parametr -c
if [ ! -f "$configFile" ]
then
	write
	MailSend
	exit 10
fi

if [ -f "$configFile" ]
then
	. "$configFile"
	Log "nacten konfiguracni soubor ($configFile)"
else
	write
	. "$configFile"
fi


#nastavenim disabled na 1 se vypne spousteni scriptu, uprav $configFile, mail se neposila
if [ "$disabled" -eq 1 ]
then
	Log "script ($scriptName) byl disablovan v konfiguracnim souboru ($configFile)"
	MailSend
	exit 1
fi

#kontrola existence mysqlDefaultsFile, pripadne vytvoreni z existujiciho configu
#v pripade prazdneho hesla zaloguje error
if [ ! -f "$mysqlDefaultsFile" ]
then
	write_mysqlDefaultsFile
fi


#_ODSTRANENI_DUPLICIT
#zkontroluje, zda trace.log neobsahuje radek Duplicate entry
if [ $(grep -c "Duplicate entry" /var/log/eset/RemoteAdministrator/MDMCore/trace.log) -ne 0 ]
then
	#Pokud ano, tak nacte posledni ID zarizeni do promenne
	duplicateDeviceID=$(grep "Duplicate entry" /var/log/eset/RemoteAdministrator/MDMCore/trace.log\
		| tail -1 | sed -e "s/.*entry\ '//g" -e "s/'.*//g")
	RvLog "Nacteno ID zarizeni [$duplicateDeviceID], pro ktere existuje duplicitni zaznam"

	#pokud duplicita je v DeviceID, tak ji odstrani z DeviceID
	if [ $(mysql --defaults-extra-file="$mysqlDefaultsFile" "$database" --silent\
		-e "select * from Device where DeviceID = '$duplicateDeviceID';" | wc -l) -ne 0 ]
	then
		mysql --defaults-extra-file="$mysqlDefaultsFile" "$database" --silent\
			-e "delete from Device where DeviceID = '$duplicateDeviceID';"
		RvLog "Provedeno odstraneni duplicitniho zaznamu [$duplicateDeviceID] z databaze [$database]"
	else
		Log "V databazi neni duplicitni DeviceID"
	fi

	#pokud duplicita je v AgentUuid, tak ji odstrani z AgentUuid
	if [ $(mysql --defaults-extra-file="$mysqlDefaultsFile" "$database" --silent\
		-e "select * from Device where AgentUuid = '$duplicateDeviceID';" | wc -l) -ne 0 ]
	then
		mysql --defaults-extra-file="$mysqlDefaultsFile" "$database" --silent\
			-e "delete from Device where AgentUuid = '$duplicateDeviceID';"
		RvLog "Provedeno odstraneni duplicitniho zaznamu [$duplicateDeviceID] z databaze [$database]"
	else
		Log "V databazi neni duplicitni AgentUuid"
	fi
else
	Log "V souboru trace.log nejsou zadne duplicity"
fi


MailSend
exit 0
