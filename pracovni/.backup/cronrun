#!/bin/bash
#cronrun
#script, ktery bude spousteny cronem a bude spoustet jednotlive scripty


#LIST _PROMENNE _EXITY _LOGOVANI _PODMINKY _KONFIGURACE _FUNKCE _ZALOHA


#_PROMENNE
scriptName="cronrun"

#seznam scriptu, ktere se budou spoustet
defaultList="server-backup zabbix-backup mysql-backup samba-backup rsync-backup postgresql-backup check-server"


#v pripade, ze je script spousten ze slozky pracovni, nastavi se mu jine cesty, nez pri spusteni pres cron
if [ "$(echo $PWD | grep -c pracovni)" -eq 0 ] && [ "$(echo $0 | grep -c pracovni)" -eq 0 ]
then

	#cesta ke scriptu
	scriptDir="/usr/local/scripty"
	verbose=0
else

	#cesta ke scriptu
	scriptDir="/usr/local/scripty/pracovni"
	verbose=1
	deBug=1
fi


#_LOGOVANI

#nacteni definice funkci Log,LogError,RvCheck,MailSend z knihovny
. $scriptDir/funkce 


#kontrola/instalace atopu
if service atop status &> /dev/null
then
	RvLog "Atop je nainstalovan a bezi"
else
	/usr/local/scripty/atop
	LogError "Spusten script pro instalaci atopu"
fi


#kontrola runtime UPS, pokud existuje sluzba apcupsd

#pokud existuje service apcupsd, pak vycte hodnotu runtime
if service apcupsd status &> /dev/null
then
    #vycte pocet zbyvajicich minut. vypreparuje je z udaje TIMELEFT obsazene ve vypisu service apcupsd status
    if [ $(service apcupsd status | grep TIMELEFT | cut -d':' -f2 | sed -e 's/^[ ]//g' | cut -d'.' -f1) -lt 20 ]
    then
        LogError "Runtime je nizsi nez 20 minut, nutna vymena baterii na $HOSTNAME"
	else
		Log "Runtime baterii je dostatecny, zbyva [$(service apcupsd status | grep TIMELEFT | cut -d':' -f2 | sed -e 's/^[ ]//g' | cut -d'.' -f1)] minut"
    fi
else
	Log "K serveru neni pripojena zadna UPS"
fi



#_PODMINKY
Log "zacatek scriptu"
echo "$$" > "$startFile"
Log "($startFile) set to ($$)"


#doplneni radku do configFile
[ "$(grep -c 'verbose' $configFile)" -eq 0 ] || rm "$configFile"
RvLog "kontrola aktualnosti configFile, pripadne odstraneni stareho"


#_KONFIGURACE

#zapise konfiguracni soubor, ze ktereho bude nasledne nacitat hodnoty
if [ -f "$configFile" ]
then
	#pokud je v configu chybne popis u cronlistu, tak ho opravi, seznam se oddeluje mezerou
	if [ $(grep -c "carkou" "$configFile") -ne 0 ]
	then
		sed -i 's/cronList.*$/cronList=\"\" #seznam scriptu, ktere se budou spoustet, oddeleny mezerou/'\
			"$configFile"
		Log "nahrazeni promenne debugging bez uvozovek"
	fi

	#nacteni obsahu configfile
	. "$configFile"
	Log "nacten konfiguracni soubor ($configFile)"
else
	{
	echo "disabled=0	#slouzi pro globalni, hromadne zruseni spousteni vsech scriptu ze slozky $scriptDir"
	echo "cronList=\"\"	#seznam scriptu, ktere se budou spoustet, oddeleny mezerou"
	echo "recipient=\"\"	#email, na ktery se budou posilat pripadne problemy"
	echo "debugging=0	#slouzi pro globalni zapnuti debugovani"
	} > $configFile
	Log "zapsan konfiguracni soubor pro server ($HOSTNAME)"
	. "$configFile"
fi

#pro jistotu vzdy nastavi opravneni pro konfiguracni soubory na 600
chmod -R 600 "$configDir"

#nastavenim disabled na 1 se vypne spousteni scriptu, uprav $configFile, mail se neposila
if [ "$disabled" -eq 1 ]
then
	Log "script byl disablovan v konfiguracnim souboru ($configFile)"
	exit 0
fi


#zapne podrobne vypisy scriptu
if [ "$debugging" -eq 1 ]
then
	export deBug=1
	export verbose=1
	Log "nastaveny podrobne vypisy scriptu"
fi


#odstraneni pripadnych err souboru
find "$pidDir" -maxdepth 1 -type f -name "*.err" -exec rm {} \;
RvLog "find ($pidDir) -maxdepth 1 -type f -name \"*.err\" -exec rm {} \;"


#provede rotaci log souboru
/usr/sbin/logrotate /etc/logrotate.d/scripty
RvLog "logrotate /etc/logrotate.d/scripty"

#spojeni defaultni konfigurace s konfiguraci z $configFile
scriptList="$defaultList $cronList"
Log "nastavena promenna scriptList ($scriptList)"

#vytvoreni pole ze seznamu scriptu
scriptsARRAY=($(echo "$scriptList"))
Log "nacteno pole scriptsARRAY ($scriptsARRAY)"


if [ -f /etc/cron.daily/cronrun ]
then
	rm /etc/cron.daily/cronrun
	RvLog "Odstranen link na spousteni cronrunu"
else
	LogError "Pozor, cronrun neni nalinkovan, neco tam neni, jak melo byt"
fi

#spusteni jednotlivych scriptu
for script in ${scriptsARRAY[@]}
do
	#zruseni cronrunu - nalinkovani jednotlivych scriptu do cronu - cronrun preveden na server-check a bude slouzit ke kontrole serveru
	ln -sf /usr/local/scripty/"$script" /etc/cron.daily/"$script"
done


#pokud je errorFile, posle mailem $logFile, jinak udela touch na stopFile
MailSend
exit 0
