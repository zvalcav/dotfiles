#!/bin/bash
#samba-backup
#provadi zalohovani samby, uchovava 90 dennich a 12 mesicnich zaloh


#LIST _PROMENNE _EXITY _LOGOVANI _PODMINKY _KONFIGURACE _KONTROLY _FUNKCE _ZALOHA


#_PROMENNE
scriptName="samba-backup"

#slozka, kam se bude zalohovat
backupDir="/var/backup/samba"

#cesta do slozky se sambou, tdb soubory atd
sambaDir="/var/lib/samba" 

#cesta do slozky se zalohou, obsah slozky se cely zabali do tgz soubrou, soubory tdb a ldb 
#jsou vyexportovane pres tdbbackup a prejmenovane pri presunu
sambaBackup="$backupDir/copy"

#promenna oznacujici rucni spusteni zalohy
stateVar=0		


#v pripade, ze je script spousten ze slozky pracovni, nastavi se mu jine cesty, nez pri spusteni pres cron
if [ "$(echo $PWD | grep -c pracovni)" -eq 0 ] && [ "$(echo $0 | grep -c pracovni)" -eq 0 ]
then

	#cesta ke scriptu
	scriptDir="/usr/local/scripty"
	verbose=0
else

	#cesta ke scriptu
	scriptDir="/usr/local/scripty/pracovni"
	verbose=1
	deBug=1
fi


#_EXITY
#exit 1		#spatne nastavena promenna rsyncMod
#exit 5		#nepodarilo se pripojit nfs oddil


#_LOGOVANI

#nacteni definice funkci Log,LogError,RvLog,MailSend z knihovny
. $scriptDir/funkce
Log "script ($scriptName) - zacatek"
echo "$$" > "$startFile"
Log "($startFile) set to ($$)"


#_KONFIGURACE
#zapise konfiguracni soubor, ze ktereho bude nasledne nacitat hodnoty
write(){
	if [ -f "$configFile" ]
	then
		cp "$configFile" "${configFile}.back"
		RvLog "provedena zaloha konfigurace do (${configFile}.back)"
	fi	
	{
	echo "dayLimit=30	#urcuje kolik dennich zaloh se bude drzet"
	echo "monthLimit=6	#urcuje kolik mesicnich zaloh se bude drzet"
	echo "recipient=\"\"	#odkomentuj a zapis email pro posilani erroru"
	} > "$configFile"
	LogError "zapsan konfiguracni soubor pro server ($HOSTNAME)"
}


#nacteni $configFile, zapise cisty
if [ -f "$configFile" ]
then
	. "$configFile"
	Log "nacten konfiguracni soubor ($configFile)"
else
	write
	. "$configFile"
fi


#kontrola, zda existuji disablovaci zaznamy
#v pripade, ze jich je vic jak 1
if [ $(grep -c "disabled" "$configFile") -gt 1 ]
then
	#smaze vsechny
	sed -i -e '/disabled.*$/d' "$configFile"
	LogError "provedeno smazani disablovacich zaznamu, protoze jich bylo vic nez 1"
fi

#v pripade, ze neni zadny, provede jeho zapis
if [ $(grep -c "disabled" "$configFile") -eq 0 ]
then
	#pokud neni na serveru repozitar sernetu, slozka se sambou, nebo vubec /etc/yum.repos.d, zapise disabled=1 do $configFile
	if [ ! -d "/etc/yum.repos.d/" ] || [ ! -d "$sambaDir" ] || [ ! -e "/etc/yum.repos.d/sernet-samba-4.1.repo" ]
	then
		Log "Na serveru neni nainstalovana samba4, disabluji script"
		echo "disabled=1	#vypne/zapne (1/0) provadeni scriptu" >> "$configFile"
		disabled=1
	elif [ $(grep -c "disabled" "$configFile") -eq 0 ]
	then
		Log "Na serveru je nainstalovana samba4, povoluji script"
		echo "disabled=0	#vypne/zapne (1/0) provadeni scriptu" >> "$configFile"
		disabled=0
	else
		Log "na serveru je nainstalovana samba4 a script je povolen"
	fi
fi


#nastavenim disabled na 1 se vypne spousteni scriptu, uprav $configuration
if [ "$disabled" -eq 1 ]
then
	Log "script byl disablovan v konfiguracnim souboru ($configFile)"
	MailSend
	exit 0
fi

#nastaveni rotace logu samby
if [ ! -h /etc/logrotate.d/samba ]
then
	ln -s /usr/local/scripty/etc/logrotate.d/samba /etc/logrotate.d/samba
	LogError "vytvoren link do logrotate pro rotovani logu samby"
fi

#kontrola nastaveni promennych
if [ -z "$dayLimit" ] || [ -z "$monthLimit" ]
then
	LogError "nebyla nastavena nektera z potrebnych promennych"
	LogError "dayLimit=($dayLimit), monthLimit=($monthLimit)"
	dayLimit=30
	RvLog "vynuceno nastaveni promenne dayLimit=($dayLimit)"
	monthLimit=6
	RvLog "vynuceno nastaveni promenne monthLimit=($monthLimit)"
fi

#nastaveni monthLimitu na pocet mesicu
monthFindLimit=$[ $monthLimit * 30 ]
Log "nastaven monthFindLimit = ($monthLimit)"

#rotace zaloh se provadi pres date
dayNo=$(date +%Y.%m.%d_%H-%M)
dayName="$HOSTNAME-samba-${dayNo}.tgz"
monthNo=$(date +%Y.%m)
monthName="$HOSTNAME-samba-${monthNo}.tgz"


Log "zacatek zalohovani samby"
RvLog "zacatek kontroly slozek"

#smazani a vytvoreni pro cistou zalohu
RecreateDir "$sambaBackup"
CheckDir "$backupDir/day"
CheckDir "$backupDir/month"
RvLog "dokoncena kontrola potrebnych slozek"


#Opravneni
#vytvori soubor samba.acl, kam nasype rekurzivne opravneni vseho ze slozky $sambaDir
#zkontroluje slozku a provede do ni cd
if [ -d "$sambaDir" ] && cd "$sambaDir"
then
	Log "zapisuji opravneni obsahu slozky ($sambaDir)"
	getfacl -pR "../${sambaDir##*/}" > "$sambaBackup/samba.acl"
	RvLog "getfacl -pR ($sambaDir)"
	ls -lahR > "$sambaBackup/samba.list"
	RvLog "ls -lahR ($sambaDir)"
	Log "zapis opravneni slozky ($sambaDir) dokoncen, vytvoreny soubory $sambaBackup/samba.{acl,list}"
else
	LogError "nebylo mozne zmenit slozku do ($sambaDir)"
	MailSend
	exit 1
fi


#Copy
#zkopiruje slozku $sambaDir do $sambaBackup
RvLog "zacinam kopirovat slozku ($sambaDir) do ($sambaBackup)"
cp --parents --archive "$sambaDir" "$sambaBackup"
RvLog "kopirovani dat z ($sambaDir)"

#odstraneni socketu
find "$sambaBackup" -type s -exec rm {} \;	
RvLog "odstraneni socketu ze slozky ($sambaBackup)"

#zkopiruje slozku /etc/samba do $sambaBackup
cp --parents --archive /etc/samba "$sambaBackup"
RvLog "zkopirovany konfiguracni soubory do slozky ($sambaBackup)"


#Databaze
#zalohovani veskerych databazi samby
Log "spoustim vytvareni zaloh databazi"
for db in $(find $sambaDir -type f -name "*.?db")
do
	tdbbackup "$db"
	RvLog "tdbbackup $db"

	#presune a zaroven prejmenuje zalozni soubor na puvodni nazev do puvodniho umisteni ve slozce $sambaBackup
	mv "${db}.bak" "${sambaBackup}$db"
	RvLog "mv (${db}.bak) do (${sambaBackup}$db)"
done
Log "vytvareni zaloh databazi dokonceno"


#Daily
#denni zalohovani
if [ -d "$sambaBackup" ] && cd "$sambaBackup"
then
	Log "vytvarim aktualni denni zalohu ($dayName)"
	tar cpzf "$backupDir/day/$dayName" ./*
	RvLog "vytvorena komprimovana denni zaloha samby v ($backupDir/day/$dayName)"
	ln -sf "$backupDir/day/$dayName" "$backupDir/latest-backup.tgz"
	RvLog "vytvoren symlink na posledni zalohu ($backupDir/latest-backup.tgz)"

	#kontrola, zda existuje dostatek zaloh, pokud ne, tak nemaze
	backupCount=$(find "$backupDir/day" -name "*.tgz" | wc -l)
	if [ "$backupCount" -ge "$dayLimit" ]
	then
		find "$backupDir/day" -type f -mtime "+$dayLimit" -exec rm {} \;
		RvLog "odstraneni starych zaloh samby"
	else
		LogError "POZOR, nedostatecny pocet dennich zaloh ($backupCount), pokud je to novy server, pak OK"
	fi
else
	LogError "nebylo mozne zmenit slozku do ($sambaBackup)"
fi


#Monthly
#mesicni zalohovani
if [ "$(find $backupDir/month -type f | grep -c $monthName)" -eq 0 ]
then
	Log "vytvarim aktualni mesicni zalohu ($monthName)"
	ln "$backupDir/day/$dayName" "$backupDir/month/$monthName"
	RvLog "aktualni mesicni zaloha vytvorena"

	#kontrola, zda existuje dostatek zaloh, pokud ne, tak nemaze
	monthBackupCount=$(find "$backupDir/month" -name "*.tgz" | wc -l)
	if [ "$monthBackupCount" -ge "$monthLimit" ]
	then
		find "$backupDir/month" -type f -mtime "+$monthFindLimit" -exec rm {} \;
		RvLog "odstraneni starych mesicnich zaloh ze slozky ($backupDir/month)"
	else
		LogError "POZOR, nedostatecny pocet mesicnich zaloh ($monthBackupCount), pokud je to novy server, pak OK"
	fi
else
	Log "aktualni mesicni zaloha nalezena ($monthName)"
fi

#tydenni restart samby - v nedeli vecer
if [ "$(date +%u)" -eq 7 ] && service sernet-samba-ad status &> /dev/null
then
	service sernet-samba-ad restart
	RvLog "Proveden tydenni restart samby, uvidi se, zda prestane vytezovat CPU"
fi

MailSend
exit 0
