#!/bin/bash
#zabbix-backup
#provadi mysql dupmove zalohy pro zvolenou sluzbu a zastavuje service


#LIST _PROMENNE _EXITY _LOGOVANI _PODMINKY _KONFIGURACE _ZALOHA


#_PROMENNE
scriptName="zabbix-backup"
backupDir="/var/backup/zabbix"
todayDate="$(date +%F)"
#konfigurace pro soubor s heslem
mysqlDefaultsFile="$configDir/.my.cnf"
mysqlPassword="EMPTY"


if [ -z "$scriptDir" ]
then

		#v pripade, ze je script spousten ze slozky pracovni, nastavi se mu jine cesty
		if [ "$(echo $PWD | grep -c pracovni)" -eq 0 ] && [ "$(echo $0 | grep -c pracovni)" -eq 0 ]	
		then

			#cesta ke scriptu
			scriptDir="/usr/local/scripty"
			verbose=0
		else

			#cesta ke scriptu
			scriptDir="/usr/local/scripty/pracovni"
			verbose=1
			deBug=1
		fi
fi


#_EXITY
#exit 1		#script byl disablovan v konfiguracnim souboru
#exit 2		#nebyla nastavena nektera z potrebnych promennych v $configFile


#_LOGOVANI

#nacteni definice funkci Log,LogError,RvLog,MailSend z knihovny
. $scriptDir/funkce	
Log "script ($scriptName) - zacatek"
echo "$$" > "$startFile"
Log "($startFile) set to ($$)"


#_KONFIGURACE


#funkce pro zapis souboru pro mysqldump
write_mysqlDefaultsFile()
{
	{
		echo "[mysql]"
		echo "user=root"
		echo "password='$mysqlPassword'"
		echo ""
		echo "[mysqldump]"
		echo "user=root"
		echo "password='$mysqlPassword'"
	} > "$mysqlDefaultsFile"
	chmod 600 "$mysqlDefaultsFile"

	if [ -f "$configFile" ]
	then
		#odstranit radky z configFile
		sed -i -e 's/mysqlUser.*//g' "$configFile"
		sed -i -e 's/mysqlPassword.*//g' "$configFile"
		sed -i -e 's/backupItems.*//g' "$configFile"
	fi
}


#zapise konfiguracni soubor, ze ktereho bude nasledne nacitat hodnoty
write(){
	if [ -f "$configFile" ]
	then
		cp "$configFile" "${configFile}.back"
		RvLog "provedena zaloha konfigurace do (${configFile}.back)"
	fi	
	{
	echo "disabled=1		#vypne/zapne (1/0) provadeni scriptu"
	echo "backupLimit=7		#nastavuje, kolik zaloh zpetne se bude drzet"
	echo "backupItem=\"zabbix\"	#seznam databazi oddeleny mezerou"
	echo "serviceArray=( zabbix-server httpd )	#seznam sluzeb, ktere se budou zastavovat oddeleny mezerou"
	} > "$configFile"
	LogError "zapsan konfiguracni soubor pro server ($HOSTNAME)"
	write_mysqlDefaultsFile
}


#nacteni $configFile, pripadne zapsani defaultniho
if [ -f "$configFile" ]
then
	#pokud je v configu promenna disabled s kvotovanou hodnotou, tak ji odkvotuje
	if [ $(grep -c "disabled=\"" "$configFile") -ne 0 ]
	then
		sed -i 's/disabled=\"\([0-9]\+\)\"/disabled=\1/' "$configFile"
		Log "nahrazeni promenne disabled bez uvozovek"
	fi

	#pokud je v configu promenna backupLimit s kvotovanou hodnotou, tak ji odkvotuje
	if [ $(grep -c "backupLimit=\"" "$configFile") -ne 0 ]
	then
		sed -i 's/backupLimit=\"\([0-9]\+\)\"/backupLimit=\1/' "$configFile"
		Log "nahrazeni promenne backupLimit bez uvozovek"
	fi

	. "$configFile"
	Log "nacten konfiguracni soubor ($configFile)"
else
	write
	. "$configFile"
fi



#nastavenim disabled na 1 se vypne spousteni scriptu, uprav $configFile, mail se neposila
if [ "$disabled" -eq 1 ]
then
	Log "script ($scriptName) byl disablovan v konfiguracnim souboru ($configFile)"
	exit 1
fi


#kontrola existence mysqlDefaultsFile, pripadne vytvoreni z existujiciho configu
#v pripade prazdneho hesla zaloguje error
if [ ! -f "$mysqlDefaultsFile" ] && [ -n "$mysqlPassword" ]
then
	write_mysqlDefaultsFile
else
	if [ -z "$mysqlPassword" ]
	then
		LogError "Promenna mysqlPassword je prazdna, je nutne nastavit heslo do mysql databaze v [$mysqlDefaultsFile]"
		write_mysqlDefaultsFile
		MailSend
		exit 12
	fi
fi


#kontrola nastaveni promennych z configu
if [ -z "$backupItem" ] || [ -z "$serviceArray" ]
then
	LogError "nebyla nastavena nektera z promennych backupItem=($backupItem), mysqlUser=($mysqlUser), nebo mysqlPassword=($mysqlPassword)"
	exit 2
fi


#kontrola, zda mysqlPassword neobsahuje EMPTY
if [ $(grep -c "EMPTY" "$mysqlDefaultsFile") -ne 0 ]
then
	LogError "POZOR, neni nastaveno heslo pro mysql-backup v [$mysqlDefaultsFile]"
	MailSend
	exit 13
fi


Log "zacatek zalohovani - zastaveni sluzeb"



#zastaveni pozadovanych sluzeb
for serviceName in ${serviceArray[@]}
do
	/sbin/service "$serviceName" stop
	RvLog "zastaveni sluzby ($serviceName)"
	sleep 1
done


#_ZALOHA
backupName="$backupItem-${todayDate}.sql"
RvLog "nastaven promenna backupName=($backupName)"
CheckDir "$backupDir"


#vytvoreni mysqldumpu
mysqldump --defaults-extra-file="$mysqlDefaultsFile" -e -F --routines "$backupItem" -r "$backupDir/$backupName"
RvLog "Vytvoren mysqldump databaze s nazvem ($backupDir/$backupName)"

#kontrola navratove hodnoty mysqldumpu
if [ "$?" -eq 0 ]
then
	#zabaleni celeho adresare /var/lib/mysql
	sleep 1
	/sbin/service mysqld stop
	RvLog "zastaveni mysqld"
	sleep 1
	tar czpf "$backupDir/mysql-${todayDate}.tgz" -C / var/lib/mysql
	RvLog "tar /var/lib/mysql"
	sleep 1
	/sbin/service mysqld start
	RvLog "spusteni mysqld"
	cd "$backupDir"
	RvLog "cd ($backupDir)"

	#kontrola navratove hodnoty cd
	if [ "$?" -eq 0 -a -f "$backupName" ]
	then

		#spusteni pozadovanych sluzeb
		for serviceName in ${serviceArray[@]}
		do
			/sbin/service "$serviceName" start
			RvLog "spusteni sluzby ($serviceName)"
			sleep 1
		done

		#vytvori zip soubor, pokud byl dump uspesny
		zip "${backupName}.zip" "$backupName" 
		RvLog "zazipovani mysqldumpu dobehlo ($backupDir/${backupName}.zip)"

		#odstraneni dump souboru, pokud bylo zipovani uspesne
		if [ "$?" -eq 0 ] && [ -f "$backupName" ]
		then
			rm "$backupName"
			RvLog "odstraneni nekomprimovane zalohy databaze ($backupDir/$backupName)"
		else
			RvLog "zipovani mysqldumpu se nepodarilo ($backupDir/$backupName)"
		fi
	fi
	cd - 
	RvLog "cd -"
fi


#kontrola dostatecneho mnozstvi zaloh
if [ $(find "$backupDir" -name "*.zip" | wc -l) -gt "$backupLimit" ]
then
	#odstraneni zaloh starsich nez $backupLimit
	find "$backupDir" -type f -mtime +"$backupLimit" -exec rm {} \;
	RvLog "odstraneni starych zaloh z ($backupDir)"
else
	LogError "POZOR - nedostatecny pocet zaloh zabbixu"
fi


MailSend
Log "OK - zalohovani dokonceno"
exit 0
